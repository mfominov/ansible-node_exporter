---

- block:

  - name: Edit firewalld for node_exporter port
    firewalld:
      port: "{{ node_exporter_publish_port }}/tcp"
      permanent: true
      state: enabled
    notify: restart firewalld

  when: env == "develop" and ansible_os_family != "Container Linux by CoreOS"

- name: Create prometheus group
  group:
    name: prometheus
    state: present

- name: Create prometheus user
  user:
    name: prometheus
    group: prometheus
    shell: /sbin/nologin
    home: "{{ node_exporter_user_home }}"
    comment: "Prometheus services"

#- file:
#    path: "{{ node_exporter_directory }}/node_exporter-{{ node_exporter_version }}.{{ node_exporter_arch }}"
#    state: absent

- name: Get node_exporter
  unarchive:
    src: "{{ download_url }}"
    validate_certs: no
    remote_src: yes
    dest: "{{ node_exporter_directory }}"

- name: Create node_exporter config
  file:
    path: /etc/default/node_exporter
    state: touch
    mode: 0644

- name: Create node_exporter service
  template:
    src: node_exporter.service
    dest: /usr/lib/systemd/system/node_exporter.service
    mode: 0644
  when: ansible_os_family != "Container Linux by CoreOS" or ansible_os_family != 'Debian' or ansible_os_family != 'Ubuntu'

- name: Create node_exporter service
  template:
    src: node_exporter.service
    dest: /etc/systemd/system/node_exporter.service
    mode: 0644
  when: ansible_os_family == "Container Linux by CoreOS" or ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'

- name: "Change owner {{ node_exporter_user_home }}"
  file:
    path: "{{ node_exporter_user_home }}"
    state: directory
    recurse: yes
    owner: prometheus
    group: prometheus

- name: Add collectors
  lineinfile:
    path: /etc/default/node_exporter
    line: "NODE_EXPORTER_OPTS={{ node_exporter_opts }}"
    state: present

- name: start service node_exporter, in all cases, also issue daemon-reload to pick up config changes
  systemd:
    state: started
    enabled: yes
    daemon_reload: yes
    name: node_exporter

- block:

  - name: Install httpd-tools
    yum:
      name: httpd-tools
      state: present

  - name: Create htpasswd file
    shell: "htpasswd -b -c /etc/nginx/.htpasswd {{ node_exporter_user }} {{ node_exporter_user_password }}"

  - name: Copy nginx configs
    copy: 
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: node_exporter.conf, dest: /etc/nginx/default.d/node_exporter.conf }
      - { src: node_upstream.conf, dest: /etc/nginx/conf.d/node_upstream.conf }
    notify: restart nginx

  when: env == "production"